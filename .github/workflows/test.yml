on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "**"

name: "PHPStan, PHPUnit, Codecov"

jobs:
  code-check:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        php-version: [8.1]
        experimental: [false]

    steps:
      - name: "Checkout"
        uses: actions/checkout@5c3ccc22eb2c950a0fa5bc7c47190d8e3f7e681a

      - name: Setup PHP
        uses: shivammathur/setup-php@1a18b2267f80291a81ca1d33e7c851fe09e7dfc4
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ctype, dom, json, libxml, mbstring, pdo_sqlite, simplexml, tokenizer, xml, xmlwriter
          coverage: none
          tools: composer

      - name: "Get composer Cache directory"
        id: composer-cache
        run: |
          echo "composer_cache_output_dir=dir::$(composer config cache-files-dir)" >> $GITHUB_ENV
      #          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@9a6a4f6079716b44e70b2e883cfdd6fb7d6ff5d9
        with:
          path: ${{ env.composer_cache_output_dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: "Install composer dependencies"
        uses: php-actions/composer@58260d1d3c7c1576becac3ac182175adf510e953
        with:
          php_version: ${{ matrix.php-version }}
          dev: yes
          args: --no-interaction --no-progress --optimize-autoloader

      - name: "Run tests"
        uses: php-actions/phpstan@9a3628e7fe886e0a95d0d0a966ecaddee9ecd93a
        with:
          php_version: ${{ matrix.php-version }}
          php_extensions: ctype dom json libxml mbstring pdo simplexml tokenizer xml xmlwriter
          configuration: phpstan.neon
          memory_limit: 512M

  unit-tests:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        php-version: [8.1]
        symfony-version: ["5.4.*", "6.0.*", "6.1.*"]
        experimental: [false]

    steps:
      - name: "Checkout"
        uses: actions/checkout@5c3ccc22eb2c950a0fa5bc7c47190d8e3f7e681a

      - name: Setup PHP
        uses: shivammathur/setup-php@1a18b2267f80291a81ca1d33e7c851fe09e7dfc4
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ctype, dom, json, libxml, mbstring, pdo_sqlite, simplexml, tokenizer, xml, xmlwriter
          coverage: none
          tools: composer

      - name: Specify symfony version
        uses: jacobtomlinson/gha-find-replace@657b0d1fe020da9943d1702b576f5d37d43b9c03
        with:
          include: "composer.json"
          find: "^5.4|^6.0"
          replace: "${{ matrix.symfony-version }}"
          regex: false

      - name: "Get composer Cache directory"
        id: composer-cache
        run: |
          echo "composer_cache_output_dir=dir::$(composer config cache-files-dir)" >> $GITHUB_ENV
      #          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@9a6a4f6079716b44e70b2e883cfdd6fb7d6ff5d9
        with:
          path: ${{ env.composer_cache_output_dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ matrix.symfony-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-${{ matrix.symfony-version }}
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: "Install composer dependencies"
        uses: php-actions/composer@58260d1d3c7c1576becac3ac182175adf510e953
        with:
          php_version: ${{ matrix.php-version }}
          dev: yes
          args: --no-interaction --no-progress --optimize-autoloader

      - name: "Run tests"
        uses: php-actions/phpunit@aed47a6852905dbd05b7c1a47c526b38fcc4bc17
        env:
          CMLIFE_USERNAME: ${{ secrets.CMLIFE_USERNAME }}
          CMLIFE_PASSWORD: ${{ secrets.CMLIFE_PASSWORD }}
          CMLIFE_SESSION_ID: ${{ secrets.CMLIFE_SESSION_ID }}
          CMLIFE_XSRF_TOKEN: ${{ secrets.CMLIFE_XSRF_TOKEN }}
        with:
          configuration: phpunit.xml.dist
          php_version: ${{ matrix.php-version }}
          php_extensions: ctype dom json libxml mbstring pdo_sqlite simplexml tokenizer xml xmlwriter

  code-coverage:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        php-version: [ 8.1 ]
        experimental: [ false ]

    steps:
      - name: "Checkout"
        uses: actions/checkout@5c3ccc22eb2c950a0fa5bc7c47190d8e3f7e681a

      - name: Setup PHP
        uses: shivammathur/setup-php@1a18b2267f80291a81ca1d33e7c851fe09e7dfc4
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ctype, dom, json, libxml, mbstring, pdo, simplexml, tokenizer, xdebug, xml, xmlwriter
          coverage: xdebug
          tools: composer

      - name: "Get composer Cache directory"
        id: composer-cache
        run: |
          echo "composer_cache_output_dir=dir::$(composer config cache-files-dir)" >> $GITHUB_ENV
#          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@9a6a4f6079716b44e70b2e883cfdd6fb7d6ff5d9
        with:
          path: ${{ env.composer_cache_output_dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: "Install composer dependencies"
        uses: php-actions/composer@58260d1d3c7c1576becac3ac182175adf510e953
        with:
          php_version: ${{ matrix.php-version }}
          dev: yes
          args: --no-interaction --no-progress --optimize-autoloader

      - name: "Run tests"
        uses: php-actions/phpunit@aed47a6852905dbd05b7c1a47c526b38fcc4bc17
        env:
          CMLIFE_USERNAME: ${{ secrets.CMLIFE_USERNAME }}
          CMLIFE_PASSWORD: ${{ secrets.CMLIFE_PASSWORD }}
          CMLIFE_SESSION_ID: ${{ secrets.CMLIFE_SESSION_ID }}
          CMLIFE_XSRF_TOKEN: ${{ secrets.CMLIFE_XSRF_TOKEN }}
          XDEBUG_MODE: coverage
        with:
          php_version: ${{ matrix.php-version }}
          php_extensions: ctype dom json libxml mbstring pdo simplexml tokenizer xml xmlwriter xdebug
          configuration: .github/workflows/phpunit.xml.dist

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@e0fbd592d323cb2991fb586fdd260734fcb41fcb
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true