on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "**"

name: "PHPStan & Psalm"

jobs:
  code-check-phpstan:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        php-version: [8.1]
        experimental: [false]

    steps:
      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup PHP
        uses: shivammathur/setup-php@cf36231a82a1ed07abe22c0bbdf5c637fa9d1648
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ctype, dom, json, libxml, mbstring, pdo_sqlite, simplexml, tokenizer, xml, xmlwriter
          coverage: none
          tools: composer

      - name: "Get composer Cache directory"
        id: composer-cache
        run: |
          echo "composer_cache_output_dir=dir::$(composer config cache-files-dir)" >> $GITHUB_ENV
      #          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        with:
          path: ${{ env.composer_cache_output_dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: "Install composer dependencies"
        uses: php-actions/composer@9908de9a0eb7bc64f3870f46ae6cc6cc619219d8
        with:
          php_version: ${{ matrix.php-version }}
          dev: yes
          args: --no-interaction --no-progress --optimize-autoloader

      - name: "Run tests"
        uses: php-actions/phpstan@77ac183d8aa0a44d6859d128868f69ce68859697
        with:
          php_version: ${{ matrix.php-version }}
          php_extensions: ctype dom json libxml mbstring pdo simplexml tokenizer xml xmlwriter
          configuration: phpstan.neon
          memory_limit: 512M

  code-check-psalm:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        php-version: [ 8.1 ]
        experimental: [ false ]

    steps:
      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup PHP
        uses: shivammathur/setup-php@cf36231a82a1ed07abe22c0bbdf5c637fa9d1648
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ctype, dom, json, libxml, mbstring, pdo_sqlite, simplexml, tokenizer, xml, xmlwriter
          coverage: none
          tools: composer

      - name: "Get composer Cache directory"
        id: composer-cache
        run: |
          echo "composer_cache_output_dir=dir::$(composer config cache-files-dir)" >> $GITHUB_ENV
      #          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        with:
          path: ${{ env.composer_cache_output_dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: "Install composer dependencies"
        uses: php-actions/composer@9908de9a0eb7bc64f3870f46ae6cc6cc619219d8
        with:
          php_version: ${{ matrix.php-version }}
          dev: yes
          args: --no-interaction --no-progress --optimize-autoloader

      - name: "Run a static analysis with vimeo/psalm"
        run: |
          vendor/bin/psalm --config=psalm.xml --output-format=github --show-info=false --stats --threads=$(nproc) --shepherd